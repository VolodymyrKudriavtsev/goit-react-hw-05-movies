{"version":3,"file":"static/js/987.29c787e9.chunk.js","mappings":"+PAmDA,EA9CgB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACjB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAIR,EAAS,CACX,IAAMS,EAAgB,mCAAG,sGAErBJ,GAAW,GAFU,UAGKK,EAAAA,EAAAA,IAAgBV,GAHrB,gBAGbW,EAHa,EAGbA,QACRR,EAAeQ,GAJM,gDAMrBJ,EAAS,EAAD,IANa,yBAQrBF,GAAW,GARU,4EAAH,qDAWtBI,GACD,CACF,GAAE,CAACT,IAEJ,IAAMY,EAAWV,EAAYW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAC/B,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,EADsB,IAOjC,OACE,gCACGV,IAAW,sCACXE,IAAS,mCAAWA,EAAMW,WAC1BC,QAAQhB,EAAYiB,SACnB,wBAAKP,IADN,8CAON,ECnCD,EANoB,WAClB,IAAQZ,GAAYoB,EAAAA,EAAAA,MAAZpB,QAER,OAAO,SAAC,EAAD,CAASA,QAASA,GAC1B,C,sLCNKqB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAc,mCAAG,sGACLL,EAASM,IAAI,wBADR,uBACpBC,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKdC,EAAc,mCAAG,WAAMC,GAAN,yFACLT,EAASM,IAAI,iBAAkB,CAAEH,OAAQ,CAAEM,MAAAA,KADtC,uBACpBF,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdG,EAAe,mCAAG,WAAM/B,GAAN,yFACNqB,EAASM,IAAT,iBAAuB3B,EAAvB,MADM,uBACrB4B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfI,EAAY,mCAAG,WAAMhC,GAAN,yFACHqB,EAASM,IAAT,iBAAuB3B,EAAvB,cADG,uBAClB4B,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZlB,EAAe,mCAAG,WAAMV,GAAN,yFACNqB,EAASM,IAAT,iBAAuB3B,EAAvB,cADM,uBACrB4B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","pages/ReviewsPage/ReviewsPage.jsx","services/movie-api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\n\nimport { getMovieReviews } from 'services/movie-api';\n\nconst Reviews = ({ movieId }) => {\n  const [reviewsData, setReviewsData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (movieId) {\n      const fetchMoviReviews = async () => {\n        try {\n          setLoading(true);\n          const { results } = await getMovieReviews(movieId);\n          setReviewsData(results);\n        } catch (error) {\n          setError(error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchMoviReviews();\n    }\n  }, [movieId]);\n\n  const elements = reviewsData.map(({ id, author, content }) => (\n    <li key={id}>\n      <b>{author}</b>\n      <p>{content}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      {loading && <p>Loading...</p>}\n      {error && <p>Sorry! {error.message}</p>}\n      {Boolean(reviewsData.length) ? (\n        <ul>{elements}</ul>\n      ) : (\n        `We don't have any reviews for this movie.`\n      )}\n    </>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Reviews;\n","import { useParams } from 'react-router-dom';\n\nimport Reviews from 'components/Reviews';\n\nconst ReviewsPage = () => {\n  const { movieId } = useParams();\n\n  return <Reviews movieId={movieId} />;\n};\n\nexport default ReviewsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '3093f90428db537aee0c54ac8ab57737',\n  },\n});\n\nexport const getTrendMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day?');\n  return data;\n};\n\nexport const getFoundMovies = async query => {\n  const { data } = await instance.get('/search/movie?', { params: { query } });\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}?`);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits?`);\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews?`);\n  return data;\n};\n"],"names":["movieId","useState","reviewsData","setReviewsData","loading","setLoading","error","setError","useEffect","fetchMoviReviews","getMovieReviews","results","elements","map","id","author","content","message","Boolean","length","useParams","instance","axios","baseURL","params","api_key","getTrendMovies","get","data","getFoundMovies","query","getMovieDetails","getMovieCast"],"sourceRoot":""}