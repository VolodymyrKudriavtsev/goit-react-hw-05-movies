{"version":3,"file":"static/js/161.c7f4d7c4.chunk.js","mappings":"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","sources":["components/EmptyPoster/EmptyPoster.jsx","webpack://react-homework-template/./src/components/SingleMovie/single-movie.module.css?1830","components/SingleMovie/SingleMovie.jsx","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/movie-api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nconst EmrtyPoster = ({ className }) => {\n  return <div className={className}>Sorry, there is no poster</div>;\n};\n\nEmrtyPoster.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default EmrtyPoster;\n","// extracted by mini-css-extract-plugin\nexport default {\"info\":\"single-movie_info__rqYHh\",\"more_info\":\"single-movie_more_info__3Exjt\",\"poster\":\"single-movie_poster__VJqyx\",\"empty\":\"single-movie_empty__Dmhav\"};","import { Link } from 'react-router-dom';\n\nimport EmptyPoster from 'components/EmptyPoster';\n\nimport css from './single-movie.module.css';\n\nconst SingleMovie = ({ data, from }) => {\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = data;\n\n  const releaseYear = release_date?.slice(0, 4);\n  const userScore = (vote_average * 10).toFixed();\n  const genresNames = genres?.map(genre => genre.name).join(' ');\n\n  return (\n    <>\n      <div className={css.info}>\n        {poster_path ? (\n          <img\n            className={css.poster}\n            src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2${poster_path}`}\n            alt=\"Poster\"\n          />\n        ) : (\n          <EmptyPoster className={css.empty} />\n        )}\n\n        <div>\n          <h1>\n            {original_title} {release_date && `(${releaseYear})`}\n          </h1>\n          <p>User Score: {userScore}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          {Boolean(genres?.length) && (\n            <>\n              <h3>Genres</h3>\n              <p>{genresNames}</p>\n            </>\n          )}\n        </div>\n      </div>\n      <div className={css.more_info}>\n        <h4>Additional informaiton</h4>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default SingleMovie;\n","import PropTypes from 'prop-types';\nimport { Outlet, useNavigate, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\n\nimport SingleMovie from 'components/SingleMovie';\n\nimport { getMovieDetails } from 'services/movie-api';\n\nconst MovieDetails = ({ movieId }) => {\n  const [movieData, setMovieData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const from = location.state?.from;\n\n  useEffect(() => {\n    if (movieId) {\n      const fetchMovieDetails = async () => {\n        try {\n          setLoading(true);\n          const data = await getMovieDetails(movieId);\n          setMovieData(data);\n        } catch (error) {\n          setError(error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchMovieDetails();\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      <button type=\"button\" onClick={() => navigate(from)}>\n        &#9668; Go back\n      </button>\n      {loading && <p>Loading...</p>}\n      {error && <p>Sorry! {error.message}</p>}\n      <SingleMovie data={movieData} from={from} />\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nMovieDetails.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default MovieDetails;\n","import { useParams } from 'react-router-dom';\n\nimport MovieDetails from 'components/MovieDetails';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n\n  return <MovieDetails movieId={movieId} />;\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '3093f90428db537aee0c54ac8ab57737',\n  },\n});\n\nexport const getTrendMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day?');\n  return data;\n};\n\nexport const getFoundMovies = async query => {\n  const { data } = await instance.get('/search/movie?', { params: { query } });\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}?`);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits?`);\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews?`);\n  return data;\n};\n"],"names":["className","data","from","poster_path","original_title","release_date","vote_average","overview","genres","releaseYear","slice","userScore","toFixed","genresNames","map","genre","name","join","css","src","alt","EmptyPoster","Boolean","length","to","state","movieId","useState","movieData","setMovieData","loading","setLoading","error","setError","navigate","useNavigate","useLocation","useEffect","fetchMovieDetails","getMovieDetails","type","onClick","message","Suspense","fallback","useParams","instance","axios","baseURL","params","api_key","getTrendMovies","get","getFoundMovies","query","getMovieCast","getMovieReviews"],"sourceRoot":""}