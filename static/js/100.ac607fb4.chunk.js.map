{"version":3,"file":"static/js/100.ac607fb4.chunk.js","mappings":"mLASA,EARoB,SAAC,GAAmB,IAAjBA,EAAgB,EAAhBA,UACrB,OAAO,gBAAKA,UAAWA,EAAhB,sCACR,C,sICFD,EAAuB,mBAAvB,EAAmD,qBAAnD,EAAgF,oB,kBCgEhF,EAzDa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAIR,EAAS,CACX,IAAMS,EAAa,mCAAG,sGAElBJ,GAAW,GAFO,UAGKK,EAAAA,EAAAA,IAAaV,GAHlB,gBAGVW,EAHU,EAGVA,KACRR,EAAYQ,GAJM,gDAMlBJ,EAAS,EAAD,IANU,yBAQlBF,GAAW,GARO,4EAAH,qDAWnBI,GACD,CACF,GAAE,CAACT,IAEJ,IAAMY,EAAWV,EAASW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OAC5B,gBAAalB,UAAWmB,EAAxB,UACGH,GACC,gBACEhB,UAAWmB,EACXC,IAAG,2DAAsDJ,GACzDK,IAAI,cAGN,SAACC,EAAA,EAAD,CAAatB,UAAWmB,KAE1B,4BACE,uBAAIF,KACJ,uCAAeC,UAZVH,EADmB,IAkB9B,OACE,gCACGV,IAAW,sCACXE,IAAS,mCAAWA,EAAMgB,WAC1BC,QAAQrB,EAASsB,SAChB,wBAAKZ,IADN,uCAON,ECjDD,EANiB,WACf,IAAQZ,GAAYyB,EAAAA,EAAAA,MAAZzB,QAER,OAAO,SAAC,EAAD,CAAMA,QAASA,GACvB,C,sLCNK0B,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAc,mCAAG,sGACLL,EAASM,IAAI,wBADR,uBACpBC,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKdC,EAAc,mCAAG,WAAMC,GAAN,yFACLT,EAASM,IAAI,iBAAkB,CAAEH,OAAQ,CAAEM,MAAAA,KADtC,uBACpBF,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdG,EAAe,mCAAG,WAAMpC,GAAN,yFACN0B,EAASM,IAAT,iBAAuBhC,EAAvB,MADM,uBACrBiC,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfvB,EAAY,mCAAG,WAAMV,GAAN,yFACH0B,EAASM,IAAT,iBAAuBhC,EAAvB,cADG,uBAClBiC,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZI,EAAe,mCAAG,WAAMrC,GAAN,yFACN0B,EAASM,IAAT,iBAAuBhC,EAAvB,cADM,uBACrBiC,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["components/EmptyPoster/EmptyPoster.jsx","webpack://react-homework-template/./src/components/Cast/cast.module.css?8374","components/Cast/Cast.jsx","pages/CastPage/CastPage.jsx","services/movie-api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nconst EmrtyPoster = ({ className }) => {\n  return <div className={className}>Sorry, there is no poster</div>;\n};\n\nEmrtyPoster.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default EmrtyPoster;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"cast_item__AMMjV\",\"poster\":\"cast_poster__VH74P\",\"empty\":\"cast_empty__W+IO6\"};","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport EmptyPoster from 'components/EmptyPoster';\nimport css from './cast.module.css';\n\nimport { getMovieCast } from 'services/movie-api';\n\nconst Cast = ({ movieId }) => {\n  const [castData, setCastData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (movieId) {\n      const fetchMoviCast = async () => {\n        try {\n          setLoading(true);\n          const { cast } = await getMovieCast(movieId);\n          setCastData(cast);\n        } catch (error) {\n          setError(error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchMoviCast();\n    }\n  }, [movieId]);\n\n  const elements = castData.map(({ id, profile_path, name, character }) => (\n    <li key={id} className={css.item}>\n      {profile_path ? (\n        <img\n          className={css.poster}\n          src={`https://www.themoviedb.org/t/p/w276_and_h350_face${profile_path}`}\n          alt=\"An actor\"\n        />\n      ) : (\n        <EmptyPoster className={css.empty} />\n      )}\n      <div>\n        <p>{name}</p>\n        <p>Character: {character}</p>\n      </div>\n    </li>\n  ));\n\n  return (\n    <>\n      {loading && <p>Loading...</p>}\n      {error && <p>Sorry! {error.message}</p>}\n      {Boolean(castData.length) ? (\n        <ul>{elements}</ul>\n      ) : (\n        `We don't have cast for this movie.`\n      )}\n    </>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Cast;\n","import { useParams } from 'react-router-dom';\n\nimport Cast from 'components/Cast';\n\nconst CastPage = () => {\n  const { movieId } = useParams();\n\n  return <Cast movieId={movieId} />;\n};\n\nexport default CastPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '3093f90428db537aee0c54ac8ab57737',\n  },\n});\n\nexport const getTrendMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day?');\n  return data;\n};\n\nexport const getFoundMovies = async query => {\n  const { data } = await instance.get('/search/movie?', { params: { query } });\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}?`);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits?`);\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews?`);\n  return data;\n};\n"],"names":["className","movieId","useState","castData","setCastData","loading","setLoading","error","setError","useEffect","fetchMoviCast","getMovieCast","cast","elements","map","id","profile_path","name","character","css","src","alt","EmptyPoster","message","Boolean","length","useParams","instance","axios","baseURL","params","api_key","getTrendMovies","get","data","getFoundMovies","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}